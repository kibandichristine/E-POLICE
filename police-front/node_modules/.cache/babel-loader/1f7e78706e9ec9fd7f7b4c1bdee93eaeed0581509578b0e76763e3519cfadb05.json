{"ast":null,"code":"import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": formatDecimal,\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","map":{"version":3,"names":["formatDecimal","formatPrefixAuto","formatRounded","x","p","toFixed","Math","round","toString","toExponential","toPrecision","toUpperCase"],"sources":["/home/edwin/Desktop/police-front/node_modules/d3-format/src/formatTypes.js"],"sourcesContent":["import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,aAAa,MAAM,oBAAoB;AAE9C,eAAe;EACb,GAAG,EAAE,WAACC,CAAC,EAAEC,CAAC;IAAA,OAAK,CAACD,CAAC,GAAG,GAAG,EAAEE,OAAO,CAACD,CAAC,CAAC;EAAA;EACnC,GAAG,EAAE,WAACD,CAAC;IAAA,OAAKG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EAAA;EACrC,GAAG,EAAE,WAACL,CAAC;IAAA,OAAKA,CAAC,GAAG,EAAE;EAAA;EAClB,GAAG,EAAEH,aAAa;EAClB,GAAG,EAAE,WAACG,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACM,aAAa,CAACL,CAAC,CAAC;EAAA;EACjC,GAAG,EAAE,WAACD,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACE,OAAO,CAACD,CAAC,CAAC;EAAA;EAC3B,GAAG,EAAE,WAACD,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACO,WAAW,CAACN,CAAC,CAAC;EAAA;EAC/B,GAAG,EAAE,WAACD,CAAC;IAAA,OAAKG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EAAA;EACrC,GAAG,EAAE,WAACL,CAAC,EAAEC,EAAC;IAAA,OAAKF,aAAa,CAACC,CAAC,GAAG,GAAG,EAAEC,EAAC,CAAC;EAAA;EACxC,GAAG,EAAEF,aAAa;EAClB,GAAG,EAAED,gBAAgB;EACrB,GAAG,EAAE,WAACE,CAAC;IAAA,OAAKG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC,CAACG,WAAW,EAAE;EAAA;EACpD,GAAG,EAAE,WAACR,EAAC;IAAA,OAAKG,IAAI,CAACC,KAAK,CAACJ,EAAC,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC;EAAA;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}